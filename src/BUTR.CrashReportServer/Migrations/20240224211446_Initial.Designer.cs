// <auto-generated />
using System;
using BUTR.CrashReportServer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BUTR.CrashReportServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240224211446_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.FileEntity", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("text")
                        .HasColumnName("file_id");

                    b.Property<byte[]>("DataCompressed")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("data_compressed");

                    b.HasKey("FileId")
                        .HasName("file_entity_pkey");

                    b.ToTable("file_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.IdEntity", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("text")
                        .HasColumnName("file_id");

                    b.Property<Guid>("CrashReportId")
                        .HasColumnType("uuid")
                        .HasColumnName("crash_report_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<byte>("Version")
                        .HasColumnType("smallint")
                        .HasColumnName("version");

                    b.HasKey("FileId");

                    b.HasIndex("CrashReportId");

                    b.ToTable("id_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.JsonEntity", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("text")
                        .HasColumnName("file_id");

                    b.Property<string>("CrashReport")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("data");

                    b.HasKey("FileId");

                    b.ToTable("json_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.FileEntity", b =>
                {
                    b.HasOne("BUTR.CrashReportServer.Models.Database.IdEntity", "Id")
                        .WithOne()
                        .HasForeignKey("BUTR.CrashReportServer.Models.Database.FileEntity", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id");
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.JsonEntity", b =>
                {
                    b.HasOne("BUTR.CrashReportServer.Models.Database.IdEntity", "Id")
                        .WithOne()
                        .HasForeignKey("BUTR.CrashReportServer.Models.Database.JsonEntity", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id");
                });
#pragma warning restore 612, 618
        }
    }
}
