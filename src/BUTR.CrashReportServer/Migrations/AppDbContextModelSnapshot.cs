// <auto-generated />
using System;
using BUTR.CrashReportServer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BUTR.CrashReportServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.FileEntity", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("TEXT")
                        .HasColumnName("file_id");

                    b.Property<byte[]>("DataCompressed")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("data_compressed");

                    b.HasKey("FileId")
                        .HasName("file_entity_pkey");

                    b.ToTable("file_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.IdEntity", b =>
                {
                    b.Property<string>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("file_id")
                        .HasDefaultValueSql("hex(randomblob(3))");

                    b.Property<Guid>("CrashReportId")
                        .HasColumnType("TEXT")
                        .HasColumnName("crash_report_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT")
                        .HasColumnName("created");

                    b.Property<byte>("Version")
                        .HasColumnType("INTEGER")
                        .HasColumnName("version");

                    b.HasKey("FileId");

                    b.HasIndex("CrashReportId");

                    b.ToTable("id_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.JsonEntity", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("TEXT")
                        .HasColumnName("file_id");

                    b.Property<byte[]>("CrashReportCompressed")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("data_compressed");

                    b.HasKey("FileId");

                    b.ToTable("json_entity", (string)null);
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.FileEntity", b =>
                {
                    b.HasOne("BUTR.CrashReportServer.Models.Database.IdEntity", "Id")
                        .WithOne()
                        .HasForeignKey("BUTR.CrashReportServer.Models.Database.FileEntity", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id");
                });

            modelBuilder.Entity("BUTR.CrashReportServer.Models.Database.JsonEntity", b =>
                {
                    b.HasOne("BUTR.CrashReportServer.Models.Database.IdEntity", "Id")
                        .WithOne()
                        .HasForeignKey("BUTR.CrashReportServer.Models.Database.JsonEntity", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id");
                });
#pragma warning restore 612, 618
        }
    }
}
